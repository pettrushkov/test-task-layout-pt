html, body {
	height: 100%;
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0)
}

body {
	position: relative;
	min-width: 300px;
	display: flex;
	height: auto;
	font-family: $ff;
	font-size: $fs-md;
	line-height: $lh;
	color: $grey;
	background-color: $white
}

img {
	max-width: 100%;
	height: auto
}

.wrapper {
	position: relative;
	display: flex;
	flex-direction: column;
	width: 100%;
	min-height: 100vh;
	overflow: hidden;

	.footer {
		margin-top: auto
	}
}

// Usage
.container,
.container-fluid {
	@include make-container();
}

// Responsive containers that are 100% wide until a breakpoint
@each $breakpoint, $container-max-width in $container-max-widths {
	.container-#{$breakpoint} {
		@extend .container-fluid;
	}

	@include media-breakpoint-up($breakpoint, $grid-breakpoints) {
		%responsive-container-#{$breakpoint} {
			max-width: $container-max-width;
		}

		// Extend each breakpoint which is smaller or equal to the current breakpoint
		$extend-breakpoint: true;

		@each $name, $width in $grid-breakpoints {
			@if ($extend-breakpoint) {
				.container#{breakpoint-infix($name, $grid-breakpoints)} {
					@extend %responsive-container-#{$breakpoint};
				}

				// Once the current breakpoint is reached, stop extending
				@if ($breakpoint == $name) {
					$extend-breakpoint: false;
				}
			}
		}
	}
}
